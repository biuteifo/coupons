plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.alex'
version = '0.0.1-dev'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = 'qinke-coupons'
            name = '秦客优惠'
        }
    }

    mainClassName= 'com.alex.QinKeApplication'
}

bootJar {
    archivesBaseName = 'qinke-coupons'

    launchScript {
        properties 'logFilename': 'qinke-coupons.log'
    }
}

idea {
    module {
        outputDir = file("$buildDir/out/")
        testOutputDir = file("$buildDir/test")
        sourceDirs += compileJava.options.annotationProcessorGeneratedSourcesDirectory
        generatedSourceDirs += compileJava.options.annotationProcessorGeneratedSourcesDirectory
        testSourceDirs += compileTestJava.options.annotationProcessorGeneratedSourcesDirectory
        generatedSourceDirs += compileTestJava.options.annotationProcessorGeneratedSourcesDirectory
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    hutoolVersion = "4.5.3"
    hankcsHanlpVersion = "portable-1.7.1"
    weixinVersion = "3.3.6.B"
    queryDslVersion = '4.2.1'
    springCloudAlibabaVersion = '2.1.0.BUILD-SNAPSHOT'
}


dependencies {
    implementation "cn.hutool:hutool-all:${hutoolVersion}"
    implementation "com.hankcs:hanlp:${hankcsHanlpVersion}"

    implementation 'org.springframework.cloud:spring-cloud-starter-alicloud-sms'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.session:spring-session-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.querydsl:querydsl-jpa'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}